<?php

namespace DoctrineORMModule\Proxy\__CG__\Application\Entity;

/**
 * DO NOT EDIT THIS FILE - IT WAS CREATED BY DOCTRINE'S PROXY GENERATOR
 */
class Employee extends \Application\Entity\Employee implements \Doctrine\ORM\Proxy\Proxy
{
    /**
     * @var \Closure the callback responsible for loading properties in the proxy object. This callback is called with
     *      three parameters, being respectively the proxy object to be initialized, the method that triggered the
     *      initialization process and an array of ordered parameters that were passed to that method.
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setInitializer
     */
    public $__initializer__;

    /**
     * @var \Closure the callback responsible of loading properties that need to be copied in the cloned object
     *
     * @see \Doctrine\Common\Persistence\Proxy::__setCloner
     */
    public $__cloner__;

    /**
     * @var boolean flag indicating if this object was already initialized
     *
     * @see \Doctrine\Common\Persistence\Proxy::__isInitialized
     */
    public $__isInitialized__ = false;

    /**
     * @var array properties to be lazy loaded, with keys being the property
     *            names and values being their default values
     *
     * @see \Doctrine\Common\Persistence\Proxy::__getLazyProperties
     */
    public static $lazyPropertiesDefaults = array();



    /**
     * @param \Closure $initializer
     * @param \Closure $cloner
     */
    public function __construct($initializer = null, $cloner = null)
    {

        $this->__initializer__ = $initializer;
        $this->__cloner__      = $cloner;
    }







    /**
     * 
     * @return array
     */
    public function __sleep()
    {
        if ($this->__isInitialized__) {
            return array('__isInitialized__', 'id', 'userName', 'email', 'firstName', 'lastName', 'fullName', 'isCurrentlyEmployed', 'currentJobName', 'isLookingForAJob', 'description', 'avatarUrl', 'experiences', 'city', 'zipCode', 'country', 'birthdate', 'hasDriversLicence');
        }

        return array('__isInitialized__', 'id', 'userName', 'email', 'firstName', 'lastName', 'fullName', 'isCurrentlyEmployed', 'currentJobName', 'isLookingForAJob', 'description', 'avatarUrl', 'experiences', 'city', 'zipCode', 'country', 'birthdate', 'hasDriversLicence');
    }

    /**
     * 
     */
    public function __wakeup()
    {
        if ( ! $this->__isInitialized__) {
            $this->__initializer__ = function (Employee $proxy) {
                $proxy->__setInitializer(null);
                $proxy->__setCloner(null);

                $existingProperties = get_object_vars($proxy);

                foreach ($proxy->__getLazyProperties() as $property => $defaultValue) {
                    if ( ! array_key_exists($property, $existingProperties)) {
                        $proxy->$property = $defaultValue;
                    }
                }
            };

        }
    }

    /**
     * 
     */
    public function __clone()
    {
        $this->__cloner__ && $this->__cloner__->__invoke($this, '__clone', array());
    }

    /**
     * Forces initialization of the proxy
     */
    public function __load()
    {
        $this->__initializer__ && $this->__initializer__->__invoke($this, '__load', array());
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitialized($initialized)
    {
        $this->__isInitialized__ = $initialized;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setInitializer(\Closure $initializer = null)
    {
        $this->__initializer__ = $initializer;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __getInitializer()
    {
        return $this->__initializer__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     */
    public function __setCloner(\Closure $cloner = null)
    {
        $this->__cloner__ = $cloner;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific cloning logic
     */
    public function __getCloner()
    {
        return $this->__cloner__;
    }

    /**
     * {@inheritDoc}
     * @internal generated method: use only when explicitly handling proxy specific loading logic
     * @static
     */
    public function __getLazyProperties()
    {
        return self::$lazyPropertiesDefaults;
    }

    
    /**
     * {@inheritDoc}
     */
    public function getId()
    {
        if ($this->__isInitialized__ === false) {
            return (int)  parent::getId();
        }


        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getId', array());

        return parent::getId();
    }

    /**
     * {@inheritDoc}
     */
    public function getUserName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getUserName', array());

        return parent::getUserName();
    }

    /**
     * {@inheritDoc}
     */
    public function getEmail()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getEmail', array());

        return parent::getEmail();
    }

    /**
     * {@inheritDoc}
     */
    public function setEmail($email)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setEmail', array($email));

        return parent::setEmail($email);
    }

    /**
     * {@inheritDoc}
     */
    public function getFirstName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFirstName', array());

        return parent::getFirstName();
    }

    /**
     * {@inheritDoc}
     */
    public function setFirstName($firstName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setFirstName', array($firstName));

        return parent::setFirstName($firstName);
    }

    /**
     * {@inheritDoc}
     */
    public function getLastName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getLastName', array());

        return parent::getLastName();
    }

    /**
     * {@inheritDoc}
     */
    public function setLastName($lastName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setLastName', array($lastName));

        return parent::setLastName($lastName);
    }

    /**
     * {@inheritDoc}
     */
    public function getFullName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getFullName', array());

        return parent::getFullName();
    }

    /**
     * {@inheritDoc}
     */
    public function getIsCurrentlyEmployed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsCurrentlyEmployed', array());

        return parent::getIsCurrentlyEmployed();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsCurrentlyEmployed($isCurrentlyEmployed)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsCurrentlyEmployed', array($isCurrentlyEmployed));

        return parent::setIsCurrentlyEmployed($isCurrentlyEmployed);
    }

    /**
     * {@inheritDoc}
     */
    public function isCurrentlyEmployed()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isCurrentlyEmployed', array());

        return parent::isCurrentlyEmployed();
    }

    /**
     * {@inheritDoc}
     */
    public function getCurrentJobName()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCurrentJobName', array());

        return parent::getCurrentJobName();
    }

    /**
     * {@inheritDoc}
     */
    public function setCurrentJobName($currentJobName)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCurrentJobName', array($currentJobName));

        return parent::setCurrentJobName($currentJobName);
    }

    /**
     * {@inheritDoc}
     */
    public function getIsLookingForAJob()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getIsLookingForAJob', array());

        return parent::getIsLookingForAJob();
    }

    /**
     * {@inheritDoc}
     */
    public function setIsLookingForAJob($isLookingForAJob)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setIsLookingForAJob', array($isLookingForAJob));

        return parent::setIsLookingForAJob($isLookingForAJob);
    }

    /**
     * {@inheritDoc}
     */
    public function isLookingForAJob()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'isLookingForAJob', array());

        return parent::isLookingForAJob();
    }

    /**
     * {@inheritDoc}
     */
    public function getDescription()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getDescription', array());

        return parent::getDescription();
    }

    /**
     * {@inheritDoc}
     */
    public function setDescription($description)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setDescription', array($description));

        return parent::setDescription($description);
    }

    /**
     * {@inheritDoc}
     */
    public function getAvatarUrl()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getAvatarUrl', array());

        return parent::getAvatarUrl();
    }

    /**
     * {@inheritDoc}
     */
    public function setAvatarUrl($avatarUrl)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setAvatarUrl', array($avatarUrl));

        return parent::setAvatarUrl($avatarUrl);
    }

    /**
     * {@inheritDoc}
     */
    public function getExperiences()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getExperiences', array());

        return parent::getExperiences();
    }

    /**
     * {@inheritDoc}
     */
    public function setExperiences($experiences)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setExperiences', array($experiences));

        return parent::setExperiences($experiences);
    }

    /**
     * {@inheritDoc}
     */
    public function addExperience(\Application\Entity\Experience $experience)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addExperience', array($experience));

        return parent::addExperience($experience);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExperience(\Application\Entity\Experience $experience)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeExperience', array($experience));

        return parent::removeExperience($experience);
    }

    /**
     * {@inheritDoc}
     */
    public function addExperiences($experiences)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'addExperiences', array($experiences));

        return parent::addExperiences($experiences);
    }

    /**
     * {@inheritDoc}
     */
    public function removeExperiences($experiences)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'removeExperiences', array($experiences));

        return parent::removeExperiences($experiences);
    }

    /**
     * {@inheritDoc}
     */
    public function getCity()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCity', array());

        return parent::getCity();
    }

    /**
     * {@inheritDoc}
     */
    public function setCity($city)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCity', array($city));

        return parent::setCity($city);
    }

    /**
     * {@inheritDoc}
     */
    public function getZipCode()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getZipCode', array());

        return parent::getZipCode();
    }

    /**
     * {@inheritDoc}
     */
    public function setZipCode($zipCode)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setZipCode', array($zipCode));

        return parent::setZipCode($zipCode);
    }

    /**
     * {@inheritDoc}
     */
    public function getCountry()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getCountry', array());

        return parent::getCountry();
    }

    /**
     * {@inheritDoc}
     */
    public function setCountry($country)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setCountry', array($country));

        return parent::setCountry($country);
    }

    /**
     * {@inheritDoc}
     */
    public function getBirthdate()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getBirthdate', array());

        return parent::getBirthdate();
    }

    /**
     * {@inheritDoc}
     */
    public function setBirthdate($birthdate)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setBirthdate', array($birthdate));

        return parent::setBirthdate($birthdate);
    }

    /**
     * {@inheritDoc}
     */
    public function getHasDriversLicence()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'getHasDriversLicence', array());

        return parent::getHasDriversLicence();
    }

    /**
     * {@inheritDoc}
     */
    public function setHasDriversLicence($hasDriversLicence)
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'setHasDriversLicence', array($hasDriversLicence));

        return parent::setHasDriversLicence($hasDriversLicence);
    }

    /**
     * {@inheritDoc}
     */
    public function hasDriversLicence()
    {

        $this->__initializer__ && $this->__initializer__->__invoke($this, 'hasDriversLicence', array());

        return parent::hasDriversLicence();
    }

}
